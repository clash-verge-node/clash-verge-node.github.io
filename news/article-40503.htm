<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clash-verge-node.github.io/news/article-40503.htm" />
    <meta charset="utf-8">
    <title>新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具</title>
        <meta name="description" content="在 appium2.0 之前，在移动端设备上的触屏操作，单手指触屏和多手指触屏分别是由 TouchAction 类，Multiaction 类实现的。 在 appium2.0 之后，这 2 个方法将会" />
        <link rel="icon" href="/assets/website/img/clash_verge_node/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Clash Verge Node免费机场节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clash-verge-node.github.io/news/article-40503.htm" />
    <meta property="og:site_name" content="Clash Verge Node免费机场节点分享官网" />
    <meta property="og:title" content="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具" />
    <meta property="og:image" content="https://clash-verge-node.github.io/uploads/20240912-1/b44aafd4039485574e3c46b07e21b95f.webp" />
        <meta property="og:release_date" content="2025-01-14T07:35:19" />
    <meta property="og:updated_time" content="2025-01-14T07:35:19" />
        <meta property="og:description" content="在 appium2.0 之前，在移动端设备上的触屏操作，单手指触屏和多手指触屏分别是由 TouchAction 类，Multiaction 类实现的。 在 appium2.0 之后，这 2 个方法将会" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    
    <!-- Pe-7 icon -->
    <link href="/assets/website/css/clash_verge_node/pe-icon-7.css" rel="stylesheet" type="text/css">
    <!--Slider-->
    <link rel="stylesheet" href="/assets/website/css/clash_verge_node/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/clash_verge_node/owl.theme.default.min.css">
    <!-- css -->
    <link href="/assets/website/css/clash_verge_node/bootstrap.min.css" rel="stylesheet" type="text/css">
    <link href="/assets/website/css/clash_verge_node/style.min.css" rel="stylesheet" type="text/css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-1V24PEL91J"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-1V24PEL91J');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Loader -->
    <div id="preloader">
        <div id="status">
            <div class="spinner">
                <div class="bounce1"></div>
                <div class="bounce2"></div>
                <div class="bounce3"></div>
            </div>
        </div>
    </div>
    <!--Navbar Start-->
    <nav class="navbar navbar-expand-lg fixed-top navbar-custom sticky sticky-dark align-items-center">
        <div class="container">
                        <a class="logo mr-3" href="/">
                <span>Clash Verge Node</span>
            </a>
                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarCollapse" aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation"><i class="" data-feather="menu"></i></button>
            <div class="collapse navbar-collapse" id="navbarCollapse">
                <ul class="navbar-nav navbar-center" id="mySidenav">
                                        <li class="nav-item"><a href="/" class="nav-link">首页</a></li>
                                        <li class="nav-item"><a href="/free-nodes/" class="nav-link">免费节点</a></li>
                                        <li class="nav-item"><a href="/paid-subscribe/" class="nav-link">推荐机场</a></li>
                                        <li class="nav-item"><a href="/news/" class="nav-link">新闻资讯</a></li>
                                        <li class="nav-item"><a href="#" class="nav-link">关于</a></li>
                    <li class="nav-item"><a href="#" class="nav-link">联系</a></li>
                </ul>
            </div>
        </div>
    </nav>
    <!-- Navbar End -->
    <!-- Hero Start -->
    <section class="hero-1-bg bg-light" style="background-image: url(/assets/website/img/clash_verge_node/hero-1-bg-img.png);padding: 0;" id="home">
        <div class="container">
            <div class="row align-items-center justify-content-center">
                <div class="col-lg-6">
                    <h1 class="hero-1-title font-weight-normal text-dark mb-4">新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具</h1>
                    <p class="text-muted mb-4 pb-3">
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                    </p>
                </div>
                <div class="col-lg-6 col-md-10">
                    <div class="mt-lg-0"><img src="/assets/website/img/clash_verge_node/hero-img.png" alt="" class="img-fluid d-block mx-auto"></div>
                </div>
            </div>
        </div>
    </section>
    <!-- Hero End -->
    <!-- Features Start -->
    <section class="section" id="features">
        <div class="container">
            <div class="features-content">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<p>在 appium2.0 之前，在移动端设备上的触屏操作，单手指触屏和多手指触屏分别是由 TouchAction 类，Multiaction 类实现的。</p> <p>在 appium2.0 之后，这 2 个方法将会被舍弃。</p> <p><strong><code>"[Deprecated] 'TouchAction' action is deprecated. Please use W3C actions instead."</code></strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/26cb53083985f1339e23f600a554f494.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> </p> <p> </p> <p></p> <h2 id="1-w3c-action是什么-">1、w3c action 是什么？</h2> <p>在 w3c 的 actions 当中，将输入源分为了三类：</p> <ol> <li>键盘类 - Key</li> <li>指针类 - Pointer</li> <li>None</li> </ol> <p>对于 Pointer 指针类输入源，共有 3 种：Mouse 鼠标、Touch 触屏、Pen 笔触</p> <p>输入源，是提供输入事件的虚拟设备。</p> <p>每一个输入源，都是一个输入 id，输入源 type。与真实设备一样，每一个输入源都有状态的，有输入事件。</p> <p>在 python selenium 的源码当中，selenium/common/actions/input_devices.py 里 InputDevices 类定义了输入源类。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/44685022862a2996311c7269d85ee244.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> </p> <p> </p> <h3 id="1-空输入源-null-input-source-">1、<strong>空输入源(null input source)</strong><br /> </h3> <p>提供以下行为：</p> <p><strong>pause</strong>：不做任何操作一段时间，或者动作的持续时间</p> <h3 id="2-键盘输入源-key-input-source-">2、<strong>键盘输入源(key input source)</strong><br /> </h3> <p>提供以下行为：</p> <p><strong>KeyDown</strong>：按下某个键</p> <p><strong>KeyUp</strong>：释放某个键</p> <p><strong>在 python selenium 的源码当中，selenium/common/actions/key_input.py 里 KeyInput 类定义了按钮输入源类。</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/f61f4387e57677fbfcdca5e5b1c3536b.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> </p> <p> </p> <h3 id="3-指针输入源-pointer-input-source--提供以下行为-">3、<strong>指针输入源(pointer input source)</strong>，提供以下行为：</h3> <p><strong>PointerDown</strong>：按下鼠标键，或者触屏或者触屏笔触屏</p> <p><strong>PointerUp</strong>：松开鼠标键，或者手离开屏幕，或者触屏笔离开屏幕</p> <p><strong>PointerMove</strong>：移动到屏幕某个点</p> <p><strong>PointerCancel</strong>：删除某个指针操作</p> <p><strong>在 python selenium 的源码当中，selenium/common/actions/pointer_input.py 里 PointerInput 类定义了指针输入源类。</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/9fa69167c93e9c358fb31f4bf1dfc3f1.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> </p> <p> </p> <h3 id="4-在输入源基础上-定义了键盘操作类KeyActions">4、在输入源基础上，定义了键盘操作类 <strong>KeyActions</strong><br /> </h3> <p><strong>在 python selenium 的源码当中，selenium/common/actions/key_actions.py 里 KeyActions 类定义了键盘操作类。</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/e69cc38dcd47420b8ecaba4bbefb5c59.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> </p> <p> </p> <h3 id="5-在输入源基础上-定义了鼠标-触屏操作PointerActions类-">5、在输入源基础上，定义了鼠标/触屏操作 <strong>PointerActions</strong> 类：</h3> <p><strong>在 python selenium 的源码当中，selenium/common/actions/pointer_actions.py 里 PointerActions 类定义了鼠标/触屏操作类。</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/946bd87a3561a11cc6193d740b046afa.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/4b45a9f7ae1b7a9de419f59a99ef9983.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> <img decoding="async" src="http://img.555519.xyz/uploads3/20220506/3bae4bae08987248d56577bbd13ffa3d.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> </p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/052d5b7a67c276c4ad27f8d03e9c7944.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> </p> <p> </p> <p>汇总一下上面几个类：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/30e5440f247eb687209424cea9dd9554.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> </p> <p> </p> <h3 id="6-ActionBuilder类">6、ActionBuilder 类</h3> <p><strong>初始化方法：</strong></p> <ol> <li>输入源设备列表，会放 2 个输入源：鼠标输入源、键盘输入源。</li> <li>有 2 个私有属性：键盘操作对象(KeyActions 类实例化**)**，鼠标/触屏操作对象(PointerActions 类实例化)</li> </ol> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/3efde946b015f23832ecd9cd05dfda0b.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> </p> <p> </p> <p><strong>属性：key_action，pointer_action</strong></p> <p>在 ActionChains 类当中，就是通过这 2 个属性来调用鼠标和键盘的操作的。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/1432de8d17f21a70b07f97b4646f2f8c.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> </p> <p> </p> <p><strong>添加新的输入源：add_key_input，add_pointer_input</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/786d3ef43fb87cd97fcb36847e13fed9.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> </p> <p> </p> <p></p> <h2 id="2-ActionChains类">2、ActionChains 类</h2> <p>selenium 中的鼠标操作类，鼠标行为都是使用的 ActionBuilder 类。</p> <p><strong>初始化：</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/5435e9318c2801a88f710c7356d7d9fc.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> </p> <p> </p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/0708a3ea9e67c73ee8bbb14532353c84.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> </p> <p> </p> <p></p> <h2 id="3-单点触控---ActionChains类">3、单点触控 - ActionChains 类</h2> <p>直接使用 ActionChains 类里的，w3c_actions 去实现。</p> <p>比如 appium 当中的 swipe 滑屏方法：</p> <p>移动到某一个坐标点 → 按下 → 移动到另一个坐标点 → 释放</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/3658b185015557a5729d2e7e73f3f49f.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> </p> <p> </p> <p></p> <h2 id="4-多点触控---ActionChains类">4、多点触控 - ActionChains 类</h2> <p>多点触控，是个单点触控操作同时发生，比如 2 个手指，同时在屏幕上进行滑动操作。</p> <p>仍然是 ActionChains 类，不过需要在里面，添加新的单点触控操作。</p> <div class="vditor-copy"> </p> <div class="cnblogs_code"> <pre>actions =<span style="color: rgba(0, 0, 0, 1)"> ActionChains(driver) </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 输入源设备列表为空</span> actions.w3c_actions.devices =<span style="color: rgba(0, 0, 0, 1)"> []  </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 添加一个新的输入源到设备到中，输入源类型为Touch</span> new_input = actions.w3c_actions.add_pointer_input(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">touch</span><span style="color: rgba(128, 0, 0, 1)">'</span>, f<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">finger{finger}</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">) </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 输入源的动作：移动到某个点，按下，移动到另外一点，释放</span> new_input.create_pointer_move(x=start_x, y=<span style="color: rgba(0, 0, 0, 1)">start_y) new_input.create_pointer_down(MouseButton.LEFT) new_input.create_pause(duration </span>/ 1000<span style="color: rgba(0, 0, 0, 1)">) new_input.create_pointer_move(x</span>=end_x, y=<span style="color: rgba(0, 0, 0, 1)">end_y) new_input.create_pointer_up(MouseButton.LEFT)  </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 以此类推，可以添加多个输入源操作到设备当中。可以是鼠标操作，也可以是触屏，按键等操作</span><span style="color: rgba(0, 0, 0, 1)"><br></span></pre> </div> <p> </p> </div> <p><code class="language-python highlight-chroma"><span class="highlight-n">比如，对百度地图 app 进行放大操作的代码如下：</span></code></p> <div class="vditor-copy"> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">from</span> time <span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> sleep </span><span style="color: rgba(0, 0, 255, 1)">from</span> appium <span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> webdriver  </span><span style="color: rgba(0, 0, 255, 1)">from</span> selenium.webdriver <span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> ActionChains </span><span style="color: rgba(0, 0, 255, 1)">from</span> selenium.webdriver.common.actions.mouse_button <span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> MouseButton  </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">我要在android7.1.2设备上，打开百度地图app</span> desired_caps =<span style="color: rgba(0, 0, 0, 1)"> { </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">automationName</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">UiAutomator2</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">platformName</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Android</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">platformVersion</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">7.1.2</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">deviceName</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">HuaWei</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">noReset</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">:True, </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">appPackage</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">com.baidu.BaiduMap</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">appActivity</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">com.baidu.baidumaps.WelcomeScreen</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">, </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">systemPort</span><span style="color: rgba(128, 0, 0, 1)">"</span>: 8225<span style="color: rgba(0, 0, 0, 1)">, </span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">newCommandTimeout</span><span style="color: rgba(128, 0, 0, 1)">"</span>: 1200<span style="color: rgba(0, 0, 0, 1)"> }  </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">先连接appium server。传递指令。 appium server连接地址</span> driver = webdriver.Remote(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">&lt;http://127.0.0.1:4723/wd/hub&gt;</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">, desired_caps)  sleep(</span>20<span style="color: rgba(0, 0, 0, 1)">)  </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">获取设备的大小 - size</span> size_dict =<span style="color: rgba(0, 0, 0, 1)"> driver.get_window_size()  </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> ==========放大地图：从地图中心分别向对角线滑动放大 - 2个手指同时执行滑动操作  ==================</span> actions =<span style="color: rgba(0, 0, 0, 1)"> ActionChains(driver) </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">输入源设备列表为空</span> actions.w3c_actions.devices =<span style="color: rgba(0, 0, 0, 1)"> []  </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> ========== 第1个手指：从正中心向右上角滑动  ==================</span><span style="color: rgba(0, 128, 0, 1)"> #</span><span style="color: rgba(0, 128, 0, 1)">添加一个新的输入源到设备到中，输入源类型为Touch,id为finger0</span> new_input = actions.w3c_actions.add_pointer_input(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">touch</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">finger0</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">) </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">输入源的动作：移动到某个点，按下，移动到另外一点，释放</span> new_input.create_pointer_move(x=size_dict[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">width</span><span style="color: rgba(128, 0, 0, 1)">"</span>] * 0.5, y=size_dict[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">height</span><span style="color: rgba(128, 0, 0, 1)">"</span>] * 0.5<span style="color: rgba(0, 0, 0, 1)">) new_input.create_pointer_down() </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> new_input.create_pointer_down(MouseButton.LEFT)</span> new_input.create_pause(0.2) <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 200ms</span> new_input.create_pointer_move(x=size_dict[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">width</span><span style="color: rgba(128, 0, 0, 1)">"</span>] * 0.9, y=size_dict[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">height</span><span style="color: rgba(128, 0, 0, 1)">"</span>] * 0.1<span style="color: rgba(0, 0, 0, 1)">) new_input.create_pointer_up(MouseButton.LEFT)  </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> ========== 第2个手指：从正中心向左下角滑动  ==================</span><span style="color: rgba(0, 128, 0, 1)"> #</span><span style="color: rgba(0, 128, 0, 1)">添加一个新的输入源到设备到中，输入源类型为Touch。id为finger1</span> new_input = actions.w3c_actions.add_pointer_input(<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">touch</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">finger1</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">) </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">输入源的动作：移动到某个点，按下，移动到另外一点，释放</span> new_input.create_pointer_move(x=size_dict[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">width</span><span style="color: rgba(128, 0, 0, 1)">"</span>] * 0.5, y=size_dict[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">height</span><span style="color: rgba(128, 0, 0, 1)">"</span>] * 0.5<span style="color: rgba(0, 0, 0, 1)">) new_input.create_pointer_down() </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> new_input.create_pointer_down(MouseButton.LEFT)</span> new_input.create_pause(0.2) <span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)"> 200ms</span> new_input.create_pointer_move(x=size_dict[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">width</span><span style="color: rgba(128, 0, 0, 1)">"</span>] * 0.1, y=size_dict[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">height</span><span style="color: rgba(128, 0, 0, 1)">"</span>] * 0.9<span style="color: rgba(0, 0, 0, 1)">) new_input.create_pointer_up(MouseButton.LEFT)  </span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">执行动作</span> <span style="color: rgba(0, 0, 0, 1)">actions.perform() <br></span></pre> </div> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/cc05ebfe40e51c9f5d677bbd5e5fc77a.jpg" alt="新鲜出炉：appium2.0+ 单点触控和多点触控新的解决方案_在线工具"></p> <p> </p> <p> </p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-40502.htm">VUE3.0使用ElementPlus开发登录界面</a></p>
                                        <p>下一个：<a href="/news/article-40997.htm">基于vue+springboot，实现图片base64转码保存到数据库</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-15-node-share.htm" title="「1月15日」最高速度20.2M/S，2025年Clash Verge Node每天更新免费节点订阅链接">「1月15日」最高速度20.2M/S，2025年Clash Verge Node每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-45490.htm" title="动物诊疗许可证管理办法最新版（动物诊疗许可证是什么事项）">动物诊疗许可证管理办法最新版（动物诊疗许可证是什么事项）</a></li>
                        <li class="py-2"><a href="/news/article-25690.htm" title="async-validator 源码学习笔记validate 方法">async-validator 源码学习笔记validate 方法</a></li>
                        <li class="py-2"><a href="/news/article-47932.htm" title="Python通过kerberos安全认证操作kafka">Python通过kerberos安全认证操作kafka</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-30-clash-verge-rev-nodes.htm" title="「1月30日」最高速度22.3M/S，2025年Clash Verge Node每天更新免费节点订阅链接">「1月30日」最高速度22.3M/S，2025年Clash Verge Node每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-10-clash-verge-rev-node-github.htm" title="「1月10日」最高速度19.7M/S，2025年Clash Verge Node每天更新免费节点订阅链接">「1月10日」最高速度19.7M/S，2025年Clash Verge Node每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-24298.htm" title="兽药前三十强（兽药前十名）">兽药前三十强（兽药前十名）</a></li>
                        <li class="py-2"><a href="/news/article-44480.htm" title="宠物用疫苗可以带上高铁吗北京地区（宠物疫苗能上地铁吗）">宠物用疫苗可以带上高铁吗北京地区（宠物疫苗能上地铁吗）</a></li>
                        <li class="py-2"><a href="/news/article-28946.htm" title="宝宝被猫咬出血了怎么办（宝宝被猫咪咬了以后会怎么样）">宝宝被猫咬出血了怎么办（宝宝被猫咪咬了以后会怎么样）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-22-clash-verge-rev-node.htm" title="「11月22日」最高速度22.9M/S，2024年Clash Verge Node每天更新免费节点订阅链接">「11月22日」最高速度22.9M/S，2024年Clash Verge Node每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Features End -->
        <!-- Footer Start -->
    <section class="footer" style="background-image: url(/assets/website/img/clash_verge_node/hero-1-bg-img.png)">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p class="text-white-50 f-15 mb-0">
                            <a href="/">Clash Verge Node免费机场节点分享官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Footer End -->
    <!-- javascript -->
    <script src="/assets/website/js/frontend/clash_verge_node/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/clash_verge_node/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/clash_verge_node/jquery.easing.min.js"></script>
    <!-- feather icons -->
    <script src="/assets/website/js/frontend/clash_verge_node/feather-icons.js"></script>
    <!-- carousel -->
    <script src="/assets/website/js/frontend/clash_verge_node/owl.carousel.min.js"></script>
    <!-- Main Js -->
    <script src="/assets/website/js/frontend/clash_verge_node/app.js"></script>

    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>